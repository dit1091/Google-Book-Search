{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\pteje\\\\Desktop\\\\Google-Book-Search\\\\client\\\\src\\\\pages\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Alert from 'react-bootstrap/Alert';\nimport Wrapper from \"../components/Wrapper\";\nimport API from \"../utils/API\";\n\nfunction Search() {\n  _s();\n\n  const defaultAlertState = {\n    show: false,\n    type: \"\",\n    msg: \"\"\n  };\n  const successAlertState = {\n    show: true,\n    type: \"success\",\n    msg: \"Book saved successfully\"\n  };\n  const errorAlertState = {\n    show: true,\n    type: \"danger\",\n    msg: \"Unable to save book\"\n  };\n  const infoAlertState = {\n    show: true,\n    type: \"info\",\n    msg: \"Please enter keyword(s) to search for\"\n  }; // Setting our component's initial state\n\n  const [books, setBooks] = useState([]);\n  const [keyword, setKeyword] = useState(\"\");\n  const [showAlert, setShowAlert] = useState(defaultAlertState);\n\n  function saveBook(index) {\n    const newBook = {\n      title: books[index].volumeInfo.title,\n      authors: books[index].volumeInfo.authors,\n      description: books[index].volumeInfo.description,\n      image: books[index].volumeInfo.imageLinks.thumbnail,\n      link: books[index].volumeInfo.infoLink\n    };\n    API.createSavedBook(newBook).then(() => {\n      setShowAlert(successAlertState);\n      window.scrollTo(0, 0);\n    }).catch(error => {\n      console.log(error);\n      setShowAlert(errorAlertState);\n      window.scrollTo(0, 0);\n    });\n  }\n\n  ; // Handles updating component state when the user types into the input field\n\n  function handleInputChange(event) {\n    setKeyword(event.target.value);\n\n    if (showAlert.show) {\n      setShowAlert(defaultAlertState);\n    }\n\n    ;\n  }\n\n  ; // When the form is submitted, load books matching the entered keyword(s)\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n\n    if (keyword) {\n      if (showAlert.show) {\n        setShowAlert(defaultAlertState);\n      }\n\n      ;\n      API.getGoogleBooks(keyword).then(response => {\n        if (response.data.length) {\n          setBooks(response.data);\n        } else {\n          setBooks([]);\n        }\n      }).catch(error => console.log(error));\n    } else {\n      setShowAlert(infoAlertState);\n      window.scrollTo(0, 0);\n    }\n\n    ;\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Alert, {\n      show: showAlert.show,\n      variant: showAlert.type,\n      transition: null,\n      onClose: () => setShowAlert(defaultAlertState),\n      dismissible: true,\n      children: /*#__PURE__*/_jsxDEV(Alert.Heading, {\n        children: showAlert.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      style: {\n        marginTop: \"25px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: \"(React) Google Books Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"lead text-center\",\n          children: \"Search for and Save Books of Interest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      style: {\n        paddingTop: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              marginBottom: \"20px\"\n            },\n            children: \"Book Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formKeywordSearch\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Keywords:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"search\",\n              onChange: handleInputChange,\n              placeholder: \"Enter keywords to search for\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            className: \"float-right\",\n            onClick: handleFormSubmit,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      style: {\n        paddingTop: \"10px\",\n        paddingBottom: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            marginBottom: \"20px\"\n          },\n          children: \"Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), books.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: books.map((book, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Card, {\n              border: \"dark\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  children: [book.volumeInfo.title, /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    type: \"button\",\n                    className: \"float-right\",\n                    onClick: () => saveBook(index),\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    href: book.volumeInfo.infoLink,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    variant: \"primary\",\n                    type: \"button\",\n                    className: \"float-right\",\n                    style: {\n                      marginRight: \"5px\"\n                    },\n                    children: \"View\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 23\n                }, this), book.volumeInfo.authors.map((author, index) => /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n                  children: author\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                  style: {\n                    fontSize: \"16px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                    src: book.volumeInfo.imageLinks.thumbnail,\n                    style: {\n                      height: \"150px\",\n                      width: \"150px\",\n                      marginRight: \"10px\",\n                      float: \"left\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 25\n                  }, this), book.volumeInfo.description]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this)]\n          }, book.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this))\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(\"h5\", {\n          style: {\n            fontStyle: \"italic\"\n          },\n          children: \"No results to display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"QbRGBBALPGuyTOFlxa3zkcm2uIM=\");\n\n_c = Search;\n;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/pteje/Desktop/Google-Book-Search/client/src/pages/Search.js"],"names":["React","useState","Container","Jumbotron","Form","Button","Card","Alert","Wrapper","API","Search","defaultAlertState","show","type","msg","successAlertState","errorAlertState","infoAlertState","books","setBooks","keyword","setKeyword","showAlert","setShowAlert","saveBook","index","newBook","title","volumeInfo","authors","description","image","imageLinks","thumbnail","link","infoLink","createSavedBook","then","window","scrollTo","catch","error","console","log","handleInputChange","event","target","value","handleFormSubmit","preventDefault","getGoogleBooks","response","data","length","marginTop","paddingTop","marginBottom","paddingBottom","map","book","fontWeight","marginRight","author","fontSize","height","width","float","id","fontStyle"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,GAAP,MAAgB,cAAhB;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAMC,iBAAiB,GAAG;AAAEC,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,IAAI,EAAE,EAArB;AAAyBC,IAAAA,GAAG,EAAE;AAA9B,GAA1B;AACA,QAAMC,iBAAiB,GAAG;AAAEH,IAAAA,IAAI,EAAE,IAAR;AAAcC,IAAAA,IAAI,EAAE,SAApB;AAA+BC,IAAAA,GAAG,EAAE;AAApC,GAA1B;AACA,QAAME,eAAe,GAAG;AAAEJ,IAAAA,IAAI,EAAE,IAAR;AAAcC,IAAAA,IAAI,EAAE,QAApB;AAA8BC,IAAAA,GAAG,EAAE;AAAnC,GAAxB;AACA,QAAMG,cAAc,GAAG;AAAEL,IAAAA,IAAI,EAAE,IAAR;AAAcC,IAAAA,IAAI,EAAE,MAApB;AAA4BC,IAAAA,GAAG,EAAE;AAAjC,GAAvB,CAJgB,CAMhB;;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAE,EAAF,CAAlC;AACA,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAE,EAAF,CAAtC;AACA,QAAM,CAACqB,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAEU,iBAAF,CAA1C;;AAEA,WAASa,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,UAAMC,OAAO,GAAG;AACdC,MAAAA,KAAK,EAAET,KAAK,CAACO,KAAD,CAAL,CAAaG,UAAb,CAAwBD,KADjB;AAEdE,MAAAA,OAAO,EAAEX,KAAK,CAACO,KAAD,CAAL,CAAaG,UAAb,CAAwBC,OAFnB;AAGdC,MAAAA,WAAW,EAAEZ,KAAK,CAACO,KAAD,CAAL,CAAaG,UAAb,CAAwBE,WAHvB;AAIdC,MAAAA,KAAK,EAAEb,KAAK,CAACO,KAAD,CAAL,CAAaG,UAAb,CAAwBI,UAAxB,CAAmCC,SAJ5B;AAKdC,MAAAA,IAAI,EAAEhB,KAAK,CAACO,KAAD,CAAL,CAAaG,UAAb,CAAwBO;AALhB,KAAhB;AAQA1B,IAAAA,GAAG,CAAC2B,eAAJ,CAAoBV,OAApB,EACCW,IADD,CACM,MAAM;AACVd,MAAAA,YAAY,CAACR,iBAAD,CAAZ;AACAuB,MAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD,KAJD,EAKCC,KALD,CAKOC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAlB,MAAAA,YAAY,CAACP,eAAD,CAAZ;AACAsB,MAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD,KATD;AAUD;;AAAA,GA9Be,CAgChB;;AACA,WAASK,iBAAT,CAA2BC,KAA3B,EAAkC;AAChCxB,IAAAA,UAAU,CAACwB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;;AACA,QAAIzB,SAAS,CAACV,IAAd,EAAoB;AAClBW,MAAAA,YAAY,CAACZ,iBAAD,CAAZ;AACD;;AAAA;AACF;;AAAA,GAtCe,CAwChB;;AACA,WAASqC,gBAAT,CAA0BH,KAA1B,EAAiC;AAC/BA,IAAAA,KAAK,CAACI,cAAN;;AACA,QAAI7B,OAAJ,EAAa;AACX,UAAIE,SAAS,CAACV,IAAd,EAAoB;AAClBW,QAAAA,YAAY,CAACZ,iBAAD,CAAZ;AACD;;AAAA;AACDF,MAAAA,GAAG,CAACyC,cAAJ,CAAmB9B,OAAnB,EACCiB,IADD,CACMc,QAAQ,IAAI;AAChB,YAAIA,QAAQ,CAACC,IAAT,CAAcC,MAAlB,EAA0B;AACxBlC,UAAAA,QAAQ,CAACgC,QAAQ,CAACC,IAAV,CAAR;AACD,SAFD,MAGK;AACHjC,UAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;AACF,OARD,EASCqB,KATD,CASOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAThB;AAUD,KAdD,MAeK;AACHlB,MAAAA,YAAY,CAACN,cAAD,CAAZ;AACAqB,MAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD;;AAAA;AACF;;AAAA;AAED,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEjB,SAAS,CAACV,IAAvB;AAA6B,MAAA,OAAO,EAAEU,SAAS,CAACT,IAAhD;AAAsD,MAAA,UAAU,EAAE,IAAlE;AACE,MAAA,OAAO,EAAE,MAAMU,YAAY,CAACZ,iBAAD,CAD7B;AACkD,MAAA,WAAW,MAD7D;AAAA,6BAEE,QAAC,KAAD,CAAO,OAAP;AAAA,kBAAgBW,SAAS,CAACR;AAA1B;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,KAAK,EAAE;AAAEwC,QAAAA,SAAS,EAAE;AAAb,OAAxB;AAAA,6BACE,QAAC,SAAD;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF,eAWE,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAxB;AAAA,6BACE,QAAC,SAAD;AAAA,+BACE,QAAC,IAAD;AAAA,kCACE;AAAI,YAAA,KAAK,EAAE;AAAEC,cAAAA,YAAY,EAAE;AAAhB,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,mBAAtB;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,cAAA,IAAI,EAAC,MAAnB;AAA0B,cAAA,IAAI,EAAC,QAA/B;AAAwC,cAAA,QAAQ,EAAEZ,iBAAlD;AACE,cAAA,WAAW,EAAC;AADd;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAOE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,IAAI,EAAC,QAA/B;AAAwC,YAAA,SAAS,EAAC,aAAlD;AAAgE,YAAA,OAAO,EAAEI,gBAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF,eAwBE,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,KAAK,EAAE;AAAEO,QAAAA,UAAU,EAAE,MAAd;AAAsBE,QAAAA,aAAa,EAAE;AAArC,OAAxB;AAAA,6BACE,QAAC,SAAD;AAAA,gCACE;AAAI,UAAA,KAAK,EAAE;AAAED,YAAAA,YAAY,EAAE;AAAhB,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGtC,KAAK,CAACmC,MAAN,gBACC;AAAA,oBACInC,KAAK,CAACwC,GAAN,CAAU,CAACC,IAAD,EAAOlC,KAAP,kBACV;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,MAAM,EAAC,MAAb;AAAA,sCACE,QAAC,IAAD,CAAM,MAAN;AAAA,wCACE,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,KAAK,EAAE;AAAEmC,oBAAAA,UAAU,EAAE;AAAd,mBAAnB;AAAA,6BAA4CD,IAAI,CAAC/B,UAAL,CAAgBD,KAA5D,eACE,QAAC,MAAD;AAAQ,oBAAA,OAAO,EAAC,SAAhB;AAA0B,oBAAA,IAAI,EAAC,QAA/B;AAAwC,oBAAA,SAAS,EAAC,aAAlD;AACE,oBAAA,OAAO,EAAE,MAAMH,QAAQ,CAACC,KAAD,CADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAGE,QAAC,MAAD;AAAQ,oBAAA,IAAI,EAAEkC,IAAI,CAAC/B,UAAL,CAAgBO,QAA9B;AAAwC,oBAAA,MAAM,EAAC,QAA/C;AAAwD,oBAAA,GAAG,EAAC,qBAA5D;AAAkF,oBAAA,OAAO,EAAC,SAA1F;AACA,oBAAA,IAAI,EAAC,QADL;AACc,oBAAA,SAAS,EAAC,aADxB;AACsC,oBAAA,KAAK,EAAE;AAAE0B,sBAAAA,WAAW,EAAC;AAAd,qBAD7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAOIF,IAAI,CAAC/B,UAAL,CAAgBC,OAAhB,CAAwB6B,GAAxB,CAA4B,CAACI,MAAD,EAASrC,KAAT,kBAC5B,QAAC,IAAD,CAAM,QAAN;AAAA,4BAA4BqC;AAA5B,mBAAoBrC,KAApB;AAAA;AAAA;AAAA;AAAA,wBADA,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAYE,QAAC,IAAD,CAAM,IAAN;AAAA,uCACE,QAAC,IAAD,CAAM,IAAN;AAAW,kBAAA,KAAK,EAAE;AAAEsC,oBAAAA,QAAQ,EAAC;AAAX,mBAAlB;AAAA,0CACE,QAAC,IAAD,CAAM,GAAN;AAAU,oBAAA,GAAG,EAAEJ,IAAI,CAAC/B,UAAL,CAAgBI,UAAhB,CAA2BC,SAA1C;AACE,oBAAA,KAAK,EAAE;AAAE+B,sBAAAA,MAAM,EAAC,OAAT;AAAkBC,sBAAAA,KAAK,EAAC,OAAxB;AAAiCJ,sBAAAA,WAAW,EAAC,MAA7C;AAAqDK,sBAAAA,KAAK,EAAC;AAA3D;AADT;AAAA;AAAA;AAAA;AAAA,0BADF,EAGGP,IAAI,CAAC/B,UAAL,CAAgBE,WAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAqBE;AAAA;AAAA;AAAA;AAAA,oBArBF;AAAA,aAAU6B,IAAI,CAACQ,EAAf;AAAA;AAAA;AAAA;AAAA,kBADA;AADJ,yBADD,gBA6BC;AAAI,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+DD;;GA/HQ1D,M;;KAAAA,M;AA+HR;AAED,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Card from 'react-bootstrap/Card';\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport Wrapper from \"../components/Wrapper\";\r\nimport API from \"../utils/API\";\r\n\r\nfunction Search() {\r\n  const defaultAlertState = { show: false, type: \"\", msg: \"\" };\r\n  const successAlertState = { show: true, type: \"success\", msg: \"Book saved successfully\" };\r\n  const errorAlertState = { show: true, type: \"danger\", msg: \"Unable to save book\" };\r\n  const infoAlertState = { show: true, type: \"info\", msg: \"Please enter keyword(s) to search for\" };\r\n\r\n  // Setting our component's initial state\r\n  const [books, setBooks] = useState( [] );\r\n  const [keyword, setKeyword] = useState( \"\" );\r\n  const [showAlert, setShowAlert] = useState( defaultAlertState);\r\n\r\n  function saveBook(index) {\r\n    const newBook = {\r\n      title: books[index].volumeInfo.title,\r\n      authors: books[index].volumeInfo.authors,\r\n      description: books[index].volumeInfo.description,\r\n      image: books[index].volumeInfo.imageLinks.thumbnail,\r\n      link: books[index].volumeInfo.infoLink\r\n    };\r\n\r\n    API.createSavedBook(newBook)\r\n    .then(() => {\r\n      setShowAlert(successAlertState);\r\n      window.scrollTo(0, 0);\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n      setShowAlert(errorAlertState);\r\n      window.scrollTo(0, 0);\r\n    });\r\n  };\r\n\r\n  // Handles updating component state when the user types into the input field\r\n  function handleInputChange(event) {\r\n    setKeyword(event.target.value);\r\n    if (showAlert.show) {\r\n      setShowAlert(defaultAlertState);\r\n    };\r\n  };\r\n\r\n  // When the form is submitted, load books matching the entered keyword(s)\r\n  function handleFormSubmit(event) {\r\n    event.preventDefault();\r\n    if (keyword) {\r\n      if (showAlert.show) {\r\n        setShowAlert(defaultAlertState);\r\n      };\r\n      API.getGoogleBooks(keyword)\r\n      .then(response => {\r\n        if (response.data.length) {\r\n          setBooks(response.data)\r\n        }\r\n        else {\r\n          setBooks([]);\r\n        }\r\n      })\r\n      .catch(error => console.log(error));\r\n    }\r\n    else {\r\n      setShowAlert(infoAlertState);\r\n      window.scrollTo(0, 0);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Alert show={showAlert.show} variant={showAlert.type} transition={null}\r\n        onClose={() => setShowAlert(defaultAlertState)} dismissible>\r\n        <Alert.Heading>{showAlert.msg}</Alert.Heading>\r\n      </Alert>\r\n      <Jumbotron fluid style={{ marginTop: \"25px\" }}>\r\n        <Container>\r\n          <h2 className=\"text-center\">(React) Google Books Search</h2>\r\n          <p className=\"lead text-center\">Search for and Save Books of Interest</p>\r\n        </Container>\r\n      </Jumbotron>\r\n      <Jumbotron fluid style={{ paddingTop: \"10px\" }}>\r\n        <Container>\r\n          <Form>\r\n            <h4 style={{ marginBottom: \"20px\" }}>Book Search</h4>\r\n            <Form.Group controlId=\"formKeywordSearch\">\r\n              <Form.Label>Keywords:</Form.Label>\r\n              <Form.Control type=\"text\" name=\"search\" onChange={handleInputChange}\r\n                placeholder=\"Enter keywords to search for\" />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\" className=\"float-right\" onClick={handleFormSubmit}>Search</Button>\r\n          </Form>\r\n        </Container>\r\n      </Jumbotron>\r\n      <Jumbotron fluid style={{ paddingTop: \"10px\", paddingBottom: \"10px\" }}>\r\n        <Container>\r\n          <h4 style={{ marginBottom: \"20px\" }}>Results</h4>\r\n          {books.length ? (\r\n            <>\r\n              { books.map((book, index) => (\r\n                <div key={book.id}>\r\n                  <Card border=\"dark\">\r\n                    <Card.Header>\r\n                      <Card.Title style={{ fontWeight: \"bold\" }}>{book.volumeInfo.title}\r\n                        <Button variant=\"primary\" type=\"button\" className=\"float-right\" \r\n                          onClick={() => saveBook(index)} >Save</Button>\r\n                        <Button href={book.volumeInfo.infoLink} target=\"_blank\" rel=\"noopener noreferrer\" variant=\"primary\" \r\n                        type=\"button\" className=\"float-right\" style={{ marginRight:\"5px\" }} >View</Button>\r\n                      </Card.Title>\r\n                      { book.volumeInfo.authors.map((author, index) => (\r\n                        <Card.Subtitle key={index}>{author}</Card.Subtitle>\r\n                      ))}\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                      <Card.Text style={{ fontSize:\"16px\"}}>\r\n                        <Card.Img src={book.volumeInfo.imageLinks.thumbnail} \r\n                          style={{ height:\"150px\", width:\"150px\", marginRight:\"10px\", float:\"left\" }} />\r\n                        {book.volumeInfo.description}\r\n                      </Card.Text>\r\n                    </Card.Body>\r\n                  </Card>\r\n                  <br />\r\n                </div>  \r\n              ))}\r\n            </>\r\n          ) : (\r\n            <h5 style={{ fontStyle: \"italic\" }}>No results to display</h5>\r\n          )}\r\n        </Container>\r\n      </Jumbotron>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}